@* 
<!DOCTYPE html>
<html>
<head>
    <link rel="stylesheet" href="~/css/site.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.3/css/jquery.dataTables.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.dataTables/1.13.3/js/jquery.dataTables.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/signalr/6.0.0/signalr.min.js"></script>
</head>
<body>
    <h1>Vote List</h1>

    <h2>Vote Statistics</h2>
    <table id="voteStatsTable" class="table">
        <thead>
            <tr>
                <th>Poll</th>
                <th>Polling Room</th>
                <th>Total Votes</th>
            </tr>
        </thead>
        <tbody>
            @if (ViewBag.VoteStats != null)
            {
                foreach (var stat in ViewBag.VoteStats as List<Voting_Test.Models.ViewModels.VoteStatisticsViewModel>)
                {
                    <tr>
                        <td>@stat.PollQuestion</td>
                        <td>@stat.PollingRoomName</td>
                        <td>@stat.TotalVotes</td>
                    </tr>
                }
            }
        </tbody>
    </table>

    <h2>Detailed Vote List</h2>
    <table id="voteTable" class="table">
        <thead>
            <tr>
                <th>User</th>
                <th>Poll</th>
                <th>Polling Room</th>
                <th>Vote Date</th>
            </tr>
        </thead>
        <tbody id="voteTableBody">
            @foreach (var vote in Model)
            {
                <tr>
                    <td>@vote.User.UserName</td>
                    <td>@vote.Poll.Question</td>
                    <td>@vote.PollingRoom.Name</td>
                    <td>@vote.VoteDate</td>
                </tr>
            }
        </tbody>
    </table>

    <script>
        $(document).ready(function () {
            // Initialize DataTable
            var table = $('#voteTable').DataTable({
                "order": [[3, "desc"]]
            });

            // Set up SignalR connection
            var connection = new signalR.HubConnectionBuilder()
                .withUrl("/voteHub")
                .build();

            connection.start().catch(function (err) {
                console.error("SignalR connection error:", err.toString());
            });

            connection.on("ReceiveVoteUpdate", function () {
                fetchVoteList();
            });

            function fetchVoteList() {  
                fetch("/Vote/Index")
                    .then(response => response.text())
                    .then(data => {
                        // Create a temporary container for the HTML response
                        var tempDiv = $('<div>').html(data);
                        var newBodyHtml = tempDiv.find('#voteTableBody').html();

                        // Update the DataTable with new data
                        table.clear(); // Clear old data
                        table.rows.add($(newBodyHtml).find('tr')).draw(); // Add new data and redraw
                    })
                    .catch(error => console.error("Error fetching vote list:", error));
            }
        });
    </script>
</body>
</html> *@
<!DOCTYPE html>
<html>
<head>
    <link rel="stylesheet" href="~/css/site.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.3/css/jquery.dataTables.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.3/js/jquery.dataTables.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/signalr/6.0.0/signalr.min.js"></script>
</head>
<body>
    <h1>Vote List</h1>

    <h2>Vote Statistics</h2>
    <table id="voteStatsTable" class="table">
        <thead>
            <tr>
                <th>Poll</th>
                <th>Polling Room</th>
                <th>Total Votes</th>
            </tr>
        </thead>
        <tbody>
            @if (ViewBag.VoteStats != null)
            {
                foreach (var stat in ViewBag.VoteStats as List<Voting_Test.Models.ViewModels.VoteStatisticsViewModel>)
                {
                    <tr>
                        <td>@stat.PollQuestion</td>
                        <td>@stat.PollingRoomName</td>
                        <td>@stat.TotalVotes</td>
                    </tr>
                }
            }
        </tbody>
    </table>

    <h2>Detailed Vote List</h2>
    <table id="voteTable" class="table">
        <thead>
            <tr>
                <th>User</th>
                <th>Poll</th>
                <th>Polling Room</th>
                <th>Vote Date</th>
            </tr>
        </thead>
        <tbody id="voteTableBody">
            @foreach (var vote in Model)
            {
                <tr>
                    <td>@vote.User.UserName</td>
                    <td>@vote.Poll.Question</td>
                    <td>@vote.PollingRoom.Name</td>
                    <td>@vote.VoteDate</td>
                </tr>
            }
        </tbody>
    </table>

    <script>
        $(document).ready(function () {
            // Initialize DataTable
            var table = $('#voteTable').DataTable({
                "order": [[3, "desc"]]
            });

            // Set up SignalR connection
            var connection = new signalR.HubConnectionBuilder()
                .withUrl("/voteHub")
                .build();

            connection.start().catch(function (err) {
                console.error("SignalR connection error:", err.toString());
            });

            connection.on("ReceiveVoteUpdate", function () {
                fetchVoteList();
            });

            function fetchVoteList() {
                fetch("/Vote/Index")
                    .then(response => response.text())
                    .then(data => {
                        // Create a temporary container for the HTML response
                        var tempDiv = $('<div>').html(data);
                        var newBodyHtml = tempDiv.find('#voteTableBody').html();

                        // Update the DataTable with new data
                        table.clear(); // Clear old data
                        table.rows.add($(newBodyHtml).find('tr')).draw(); // Add new data and redraw
                    })
                    .catch(error => console.error("Error fetching vote list:", error));
            }
        });
    </script>
</body>
</html>

